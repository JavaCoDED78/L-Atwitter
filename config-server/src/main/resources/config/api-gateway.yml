server:
  port: 8000

spring:
  application:
    name: api-gateway
  devtools:
    livereload:
      port: 35730
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/ui/v1/**]':
            allowedOrigins: "http://localhost:3000"
            exposedHeaders: "page-total-count"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
              - HEAD
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        -   id: topic-service
            uri: lb://topic-service
            predicates:
              - Path=/ui/v1/topics/**
            filters:
              - AuthFilter

        -   id: tag-service
            uri: lb://tag-service
            predicates:
              - Path=/ui/v1/tags/**, /api/v1/tags/**
            filters:
              - AuthFilter

        -   id: tweet-service
            uri: lb://tweet-service
            predicates:
              - Path=/ui/v1/tweets/**, /api/v1/tweets/**
            filters:
              - AuthFilter

        -   id: user-service
            uri: lb://user-service
            predicates:
              - Path=/ui/v1/user/**, /api/v1/user/**, /api/v1/auth/**
            filters:
              - name: AuthFilter

        -   id: auth-service
            uri: lb://user-service
            predicates:
              - Path=/ui/v1/auth/**

        -   id: lists-service
            uri: lb://lists-service
            predicates:
              - Path=/ui/v1/lists/**, /api/v1/lists/**
            filters:
              - AuthFilter

        -   id: chat-service
            uri: lb://chat-service
            predicates:
              - Path=/ui/v1/chat/**
            filters:
              - AuthFilter

        -   id: notification-service
            uri: lb://notification-service
            predicates:
              - Path=/ui/v1/notification/**, /api/v1/notification/**
            filters:
              - AuthFilter

        -   id: websocket-service
            uri: lb://websocket-service
            predicates:
              - Path=/websocket/**, /api/v1/websocket/**

        -   id: image-service
            uri: lb://image-service
            predicates:
              - Path=/api/v1/image/upload
            filters:
              - AuthFilter

        -   id: email-service
            uri: lb://email-service
            predicates:
              - Path=/api/v1/email/suggested

  zipkin:
    base-url: http://${ZIPKIN_HOST:localhost}:9411

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: ${EUREKA_HOST:localhost}
